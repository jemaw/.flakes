# TODO kill
# for profiling, also enable zprof at the end
autoload -Uz edit-command-line vcs_info promptinit
zmodload zsh/complist
zle -N edit-command-line

# Paths {{{

#go
export GOPATH=$HOME/Prog/go

#rust
export RUST_SRC_PATH="$(rustc --print sysroot)/lib/rustlib/src/rust/src"
export CARGO_BIN="$HOME/.cargo/bin"

# Ensure path arrays do not contain duplicates.
typeset -gU cdpath fpath mailpath path gopath

# Cuda
grep "Ubuntu" /etc/issue -i -q
if [ $? = '0' ];
then
    export CUDA_HOME='/usr/local/cuda'
    export CUDNN_HOME=$CUDA_HOME
else
    export CUDA_HOME='/opt/cuda'
    export CUDNN_HOME=$CUDA_HOME
fi

# ld_library_path
export LD_LIBRARY_PATH=$CUDNN_HOME/lib64:$CUDA_HOME/lib64:$CUDA_HOME/extras/CUPTI/lib64:$LD_LIBRARY_PATH

# ml virtual env
export ML_ENV='/mnt/data/virtualenvs/ml'

# spark
export SPARK_BIN='/opt/apache-spark/bin'

# Set the list of directories that Zsh searches for programs.
path=(
    ~/bin
    ~/.local/bin
    /usr/local/{bin,sbin}
    $path
    $CUDA_HOME/bin
    $GOPATH/bin
    $SPARK_BIN
    $CARGO_BIN
)

# }}}

# cd movement {{{

# use cd -<TAB> and cd +<TAB> to navigate dir stack
setopt autocd autopushd pushdminus pushdsilent pushdtohome
DIRSTACKSIZE=5

# }}}

# completion {{{

# enable menu completion
zstyle ':completion:*' menu select

# option colors
zstyle ':completion:*:options' list-colors '=^(-- *)=34'
# verbose Output
zstyle ':completion:*' verbose yes

# group completion candidates in groups (example no<TAB>)
zstyle ':completion:*:descriptions' format '%U%B%d%b%u' # shows group name
zstyle ':completion:*' group-name ''
zstyle ':completion:*:messages' format '%d'

# completion caching for speedup
zstyle ':completion:*' use-cache on
zstyle ':completion:*' rehash yes

# kill completions
zstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([0-9]#)*=0=01;31'
zstyle ':completion:*:kill:*' command 'ps -u $USER --forest -o pid,%cpu,tty,cputime,cmd'
# show kill completion even when there is only one match
zstyle ':completion:*:*:kill:*' menu yes select
zstyle ':completion:*:kill:*' force-list always
zstyle ':completion:*:*:killall:*' menu yes select
zstyle ':completion:*:killall:*' force-list always

# }}}

# bindkeys {{{

#vim mode
bindkey -v
bindkey "^A" beginning-of-line
bindkey "^E" end-of-line

# Open in editor.
bindkey -M vicmd 'v' edit-command-line

# Avoid Esc
bindkey -M viins 'kj' vi-cmd-mode
# Time in ms to wait for sequences
KEYTIMEOUT=30


#}}}

# prompt {{{

# command substitution (needed for vcs prompt)
setopt prompt_subst
# rprompt only current prompt
setopt transient_rprompt

zstyle ':vcs_info:*' enable git svn
# zstyle ':vcs_info:git*' formats " %{$fg[grey]%}%{$fg[blue]%}%b%{$reset_color%}%m%u%c%{$reset_color%}"
zstyle ':vcs_info:git*' formats " %b%m%u%c% "
zstyle ':vcs_info:*' check-for-changes true
zstyle ':vcs_info:*' unstagedstr '!'
zstyle ':vcs_info:*' stagedstr '+'

PROMPT_SIGN='Â»'

precmd () { vcs_info }
# PROMPT='%F{white}${vcs_info_msg_0_} % $PROMPT_SIGN %f%b'
PROMPT='${vcs_info_msg_0_} % $PROMPT_SIGN %f%b'
RPROMPT='%~'

# }}}

# global aliases {{{

# Automatically Expanding Global Aliases (Space key to expand)
# references: http://blog.patshead.com/2012/11/automatically-expaning-zsh-global-aliases---simplified.html
globalias() {
    if [[ $LBUFFER =~ '[A-Z0-9]+$' ]]; then
        zle _expand_alias
        zle expand-word
    fi
    zle self-insert
}
zle -N globalias
bindkey " " globalias                 # space key to expand globalalias
bindkey "^[[Z" magic-space            # shift-tab to bypass completion
bindkey -M isearch " " magic-space    # normal space during searches

# global aliases
alias -g T='| tail'
alias -g G='| rg -i'
alias -g C='| wc -l'
alias -g L='| less'
alias -g H='--help | bat --language=help --style=plain'

# }}}

# plugin configuration {{{

bindkey -M vicmd 'k' history-substring-search-up
bindkey -M vicmd 'j' history-substring-search-down
typeset -g HISTORY_SUBSTRING_SEARCH_ENSURE_UNIQUE=true
typeset -g HISTORY_SUBSTRING_SEARCH_HIGHLIGHT_FOUND='fg=fg,bold'
typeset -g HISTORY_SUBSTRING_SEARCH_HIGHLIGHT_NOT_FOUND='fg=red,bold'

# zsh-users/zsh-autosuggestions
bindkey '^ '  autosuggest-execute
bindkey '^J'  autosuggest-execute

# }}}

# functions {{{

function ranger-cd {
    tempfile="$(mktemp -t tmp.XXXXXX)"
    /usr/bin/ranger --choosedir="$tempfile" "${@:-$(pwd)}"
    test -f "$tempfile" &&
    if [ "$(cat -- "$tempfile")" != "$(echo -n `pwd`)" ]; then
        cd -- "$(cat "$tempfile")"
    fi
    rm -f -- "$tempfile"
}

# }}}

# fzf {{{

# TODO change to rg
export FZF_DEFAULT_COMMAND='ag --hidden --ignore .git -g ""'

# fe [FUZZY PATTERN] - Open the selected file with the default editor
fe() {
    IFS='
    '
    local declare files=($(fzf-tmux --query="$1" --select-1 --exit-0))
    [[ -n "$files" ]] && ${EDITOR:-vim} "${files[@]}"
    unset IFS
}

# fd - cd to selected directory
fd() {
  local dir
  dir=$(find ${1} -path '*/\.*' -prune \
                  -o -type d -print 2> /dev/null | fzf +m) &&
  cd "$dir"
}

# fda - including hidden directories
fda() {
    local dir
    dir=$(find ${1} -type d 2> /dev/null | fzf +m) && cd "$dir"
}


#}}}

[ -f ~/.custom.zsh ] && source ~/.custom.zsh

# vim: fdm=marker:fdl=0
